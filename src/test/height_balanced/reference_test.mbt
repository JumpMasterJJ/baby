// TODO: quick_check or ocaml's Monolith ?
test "constructing sets" {
  assert_eq!(1, 1)
}

test "querying sets" {

}

test "conversion to and from sets" {

}

test "iterating, searching, transforming sets" {

}

test "random access" {

}

test "enumerations" {

}

// test "Set::cut_and_get/basic" {
//   let s = Set::empty()
//   let s = Set::add(1, s)
//   let s = Set::add(2, s)
//   let s = Set::add(3, s)
//   let s = Set::add(4, s)
//   let s = Set::add(5, s)
//   let (left, mid, right) = Set::cut_and_get!(s, 2)
//   inspect!(left.elements(), content="@list.of([1, 2])")
//   inspect!(mid, content="3")
//   inspect!(right.to_list(), content="@list.of([4, 5])")
// }
